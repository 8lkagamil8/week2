#include <iostream>
#include <cstdlib>
#include <string>
#include <fstream>
#include <streambuf>
#include <set>
#include <cmath>
#include <windows.h>

using namespace std;

//Функция проверки.
int Cin(long min, long max) {
	long a;
	//Проверяем рациональность числа и ввод лишних символов 
	while (!(cin >> a) || (cin.peek() != '\n')) {
		cin.clear();
		while (cin.get() != '\n');
		cout << "Явно присутствуют некорректные для данного типа символы. Проверьте корректность." << endl;
	}

	//Исключение нуля
	if (a == 0) {
		cout << "Введите число отличное от нуля" << endl;
		a = Cin(min, max);
	}
	//Верхний предел
	if (a > max) {
		cout << "Число выходит за промежуток. По условию a =< " << max << " и а >= " << min << endl;
		a = Cin(min, max);
	}
	//Нижний Предел
	if (a < min) {
		cout << "Число выходит за промежуток. По условию a =< " << max << " и а >= " << min << endl;
		a = Cin(min, max);
	}
	//Исключение отрицательных чисел
	if (a < 0) {
		cout << "Вы ввели (" << a << ") Возьмем все-таки положительное, то есть " << abs(a) << endl;
		a = abs(a);
	}

	return a;
}
//Функция проверки, пропускающая ноль
int CIN(long min, long max) {
	long a;
	//Проверяем рациональность числа и ввод лишних символов 
	while (!(cin >> a) || (cin.peek() != '\n')) {
		cin.clear();
		while (cin.get() != '\n');
		cout << "Явно присутствуют некорректные для данного типа символы. Проверьте корректность." << endl;
	}

	//Верхний предел
	if (a > max) {
		cout << "Число выходит за промежуток. По условию a =< " << max << " и а >= " << min << endl;
		a = CIN(min, max);
	}
	//Нижний Предел
	if (a < min) {
		cout << "Число выходит за промежуток. По условию a =< " << max << " и а >= " << min << endl;
		a = CIN(min, max);
	}
	//Исключение отрицательных чисел
	if (a < 0) {
		cout << "Вы ввели (" << a << ") Возьмем все-таки положительное, то есть " << abs(a) << endl;
		a = abs(a);
	}

	return a;
}
//Функция проверки пропускающая ноль и отрицательные числа.
int CIn(long min, long max) {
	long a;
	//Проверяем рациональность числа и ввод лишних символов 
	while (!(cin >> a) || (cin.peek() != '\n')) {
		cin.clear();
		while (cin.get() != '\n');
		cout << "Явно присутствуют некорректные для данного типа символы. Проверьте корректность." << endl;
	}

	//Верхний предел
	if (a > max) {
		cout << "Число выходит за промежуток. По условию a =< " << max << " и а >= " << min << endl;
		a = CIn(min, max);
	}
	//Нижний Предел
	if (a < min) {
		cout << "Число выходит за промежуток. По условию a =< " << max << " и а >= " << min << endl;
		a = CIn(min, max);
	}

	return a;
}
//Функция проверки, для дробных.
long double CiN(long min, long max) {
	long double a;
	//Проверяем рациональность числа и ввод лишних символов 
	while (!(cin >> a) || (cin.peek() != '\n')) {
		cin.clear();
		while (cin.get() != '\n');
		cout << "Явно присутствуют некорректные для данного типа символы. Проверьте корректность." << endl;
	}

	//Исключение нуля
	if (a == 0) {
		cout << "Введите число отличное от нуля" << endl;
		a = CiN(min, max);
	}
	//Верхний предел
	if (a > max) {
		cout << "Число выходит за промежуток. По условию a =< " << max << " и а >= " << min << endl;
		a = CiN(min, max);
	}
	//Нижний Предел
	if (a < min) {
		cout << "Число выходит за промежуток. По условию a =< " << max << " и а >= " << min << endl;
		a = CiN(min, max);
	}
	//Исключение отрицательных чисел
	if (a < 0) {
		cout << "Вы ввели (" << a << ") Возьмем все-таки положительное, то есть " << abs(a) << endl;
		a = abs(a);
	}

	return a;
}

int we1() {
	cout << endl;
	long double R, r, l, h, s;
	cout << "Ведите радиус большего основания: "; R = CiN(-2147483647, 2147483647);
	cout << "Ведите радиус меньшего основания: "; r = CiN(-2147483647, 2147483647);
	cout << "Введите образующую: "; l = CiN(INT_MIN, INT_MAX);
	cout << "Введите высоту: "; h = CiN(INT_MIN, INT_MAX);

	if (r > R) {
		s = r;
		r = R;
		r = s;
	}

	if (l != sqrt(pow((R - r), 2) + pow(h, 2))) {
		cout << "Конуса не существует" << endl;
	}
	else {
		if (l < h) {
			cout << "Образующая не может быть меньше высоты" << endl;
		}
		else {
			if (r == R) {
				cout << "Это цилиндр" << endl;
			}
			else {
				cout << "Объем равен " << abs((h * (pow(R, 2) + R * r + pow(r, 2)) / 3)) << "*pi" << endl;
				cout << "Площадь полной поверхности равна " << abs(pow(R, 2) + (R + r) * l + pow(r, 2)) << "*pi" << endl;
			}
		}
	}
	return 0;
}
float we2() {
	cout << endl;
	float x, a;
	cout << "Введите х: "; x = CIn(INT_MIN, INT_MAX);
	cout << "Введите а: "; a = CIn(INT_MIN, INT_MAX);
	if ((x != 0) & (a >= pow(x, 2))) {
		if (sqrt(pow(x, 2)) < 1) {
			cout << "w = " << a * log(sqrt(pow(x, 2))) << endl;
		}
		else {
			cout << "w = " << sqrt(a - x * x) << endl;
		}
	}
	else {
		cout << "Не подходит по ОДЗ" << endl;
	}
	return 0;
}
float we3() {
	cout << endl;
	float x, y, b;
	cout << "Введите x: "; x = CIn(INT_MIN, INT_MAX);
	cout << "Введите y: "; y = CIn(INT_MIN, INT_MAX);
	cout << "Введите b: "; b = CIn(INT_MIN, INT_MAX);

	if (((b - x) >= 0) & ((b - y) > 0)) {
		cout << "z= " << log(b - y) * sqrt(b - x) << endl;
	}
	else {
		cout << "Не подходит по ОДЗ. Попробуйте еще раз." << endl;
	}

	return 0;
}
float we4() {
	cout << endl;
	int N;
	cout << "Введите границу: "; N = CIn(1, INT_MAX);
	if (N >= 2147483637) {
		for (int u = N; u < 2147483647; u++) {
			cout << u + 1 << endl;
		}
	}
	else {
		for (int i = N; i < (N + 10); i++) {
			cout << i + 1 << endl;
		}
	}
	return 0;
}
float we5() {
	cout << endl;
	float x;
	for (x = -4; x <= 4; x = x + 0.5) {
		if ((x - 1) == 0) {
			cout << "Деление на ноль" << endl;
		}
		else {
			cout << (x * x - 2 * x + 2) / (x - 1) << endl;
		}
	}

	return 0;
}
int main() {
	cout << endl;
	SetConsoleOutputCP(1251);
	SetConsoleCP(1251);
	int s;
	cout << "Вторая неделя.\nВведите № задания:\n 1 - 'КОНУС'\n 2 - 'РАЗВЕТВЛЕНИЯ'\n 3 - 'ФУНКЦИЯ'\n 4 - 'ПОРЯДОК'\n 5 - 'ТАБУЛЯЦИЯ'\n 0 - Подняться на уровень выше\nНомер -  ";
	s = CIN(0, 5);
	switch (s) {
	case 0:
		break;
	case 1:
		we1();
		cout << endl; system("pause"); system("cls");
		main();
		break;
	case 2:
		we2();
		cout << endl; system("pause"); system("cls");
		main();
		break;
	case 3:
		we3();
		cout << endl; system("pause"); system("cls");
		main();
		break;
	case 4:
		we4();
		cout << endl; system("pause"); system("cls");
		main();
		break;
	case 5:
		we5();
		cout << endl; system("pause"); system("cls");
		main();
		break;
	}
	return 0;
}
